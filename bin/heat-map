#!/usr/bin/env ruby
require 'trollop'
require 'visualisation-utils'

parser = VisualisationUtils::BasicParser.new

@opts = Trollop::options do
    banner "heat-map takes comma and newline separated table of coordinate from stdin and renders them using gnuplot"
    parser.standard_opts(self)
end

gnu_plot_tool=VisualisationUtils::GnuPlotTool.new(@opts)

input = `cat`

freq_list = input.split("\n").map{|line|
    line.split(",").map{|number | number.to_f.round(0)}.join(",")
}
.group_by{|coords| coords}
.map{|pair| [pair[0], pair[1].length]}

freqs=freq_list.inject({}) { |memo, obj|
   memo[obj.first] = obj.last
   memo
}

freq_values = freqs.values
max_val = freq_values.max
min_val = freq_values.min
mid_val = (min_val + (max_val - min_val)/2).round(1)

if (gnu_plot_tool.debug?)
    puts "Min. value: #{min_val}, max value: #{max_val}"
end

full_map = (-179..179).map{|lon|
   (-89..89).map{|lat|
       key = "#{lat},#{lon}"
       "#{lat} #{lon} #{freqs[key]||"NaN"}"
   }
}.join("\n")

DATA_FILE_NAME="/tmp/plot-"+`date  "+%s"`.strip+".dat"
File.open(DATA_FILE_NAME, "w"){|f| f.write(full_map)}
if (gnu_plot_tool.debug?)
    STDERR.puts "data file " + DATA_FILE_NAME
end


world_dat=File.join(File.dirname(File.expand_path(__FILE__)), '/../world.dat')

gnu_plot_tool.plot(<<EOF
# color definitions
set border lw 1.5
set style line 1 lc rgb 'black' lt 1 lw 2

set rmargin screen 0.85

unset key
set tics scale 0.5
unset xtics
unset ytics
set xrange[-179:179]
set yrange[-89:89]
#set format '%g'
set palette defined (0 "white",#{min_val} "#00ffff",#{mid_val} "yellow",#{max_val} "red")
plot '#{DATA_FILE_NAME}' u 2:1:3 w image, \
     '#{world_dat}' with lines linestyle 1
EOF
)